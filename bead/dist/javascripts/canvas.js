!function(r,t){if("function"==typeof define&&define.amd)define(["exports"],t);else if("undefined"!=typeof exports)t(exports);else{var e={exports:{}};t(e.exports),r.canvas=e.exports}}(this,function(r){"use strict";function t(r){if(Array.isArray(r)){for(var t=0,e=Array(r.length);t<r.length;t++)e[t]=r[t];return e}return Array.from(r)}function e(r,t){if(!(r instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(r,"__esModule",{value:!0});var i=function(){function r(r,t){var e=[],i=!0,o=!1,n=void 0;try{for(var a,s=r[Symbol.iterator]();!(i=(a=s.next()).done)&&(e.push(a.value),!t||e.length!==t);i=!0);}catch(r){o=!0,n=r}finally{try{!i&&s.return&&s.return()}finally{if(o)throw n}}return e}return function(t,e){if(Array.isArray(t))return t;if(Symbol.iterator in Object(t))return r(t,e);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}(),o=function(){function r(r,t){for(var e=0;e<t.length;e++){var i=t[e];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(r,i.key,i)}}return function(t,e,i){return e&&r(t.prototype,e),i&&r(t,i),t}}(),n=function(){function r(){e(this,r),this.canvas=document.getElementById("canvas"),this.cxt=canvas.getContext("2d"),this.width=this.canvas.width=this.canvas.offsetWidth,this.height=this.canvas.height=this.canvas.offsetHeight,this.bounds=this.canvas.getBoundingClientRect(),this.ball_count=30,this.line_range=150,this.r_range=[5,30],this.color=[[188,56,23],[130,5,5]],this.period=[3,8],this.opacity=[.2,.8],this.speed=[-1,1],this.balls=[],this.clickHandle=this.clickHandle.bind(this),this.bindEvent(),this.start()}return o(r,[{key:"bindEvent",value:function(){this.canvas.addEventListener("click",this.clickHandle,!1)}},{key:"unbindEvent",value:function(){this.canvas.removeEventListener("click",this.clickHandle,!1)}},{key:"clickHandle",value:function(r){if(this.isAnimate)return this.isAnimate=!1;this.start();r.clientX,this.bounds.left,r.clientY,this.bounds.top}},{key:"start",value:function(){var r=this;if(this.isAnimate)return!1;for(var t=0;t<this.ball_count;t++)this.addBall();this.isAnimate=!0;var e=function t(){if(!r.isAnimate)return!1;r.render(),r.update(),requestAnimationFrame(t)};requestAnimationFrame(e)}},{key:"getColorList",value:function(r){for(var t=this,e=[this.color[1][0]-this.color[0][0],this.color[1][1]-this.color[0][1],this.color[1][2]-this.color[0][2]],i=Math.max(Math.abs(e[0]),Math.abs(e[1]),Math.abs(e[2]))*r,o=e.map(function(r){return r/i}),n=[],a=0;a<i;a++)!function(r){n.push(o.map(function(e,i){return t.color[0][i]+e*r}))}(a);return n}},{key:"addBall",value:function(){var r={x:this.getRandomNumber([0,this.width]),y:this.getRandomNumber([0,this.height]),vx:this.getRandomNumber(this.speed),vy:this.getRandomNumber(this.speed),opacity:this.getRandomNumber(this.opacity),freq:this.getRandomNumber(this.period),type:~~this.getRandomNumber([0,3]),cur_i:0,reverse:!1};if(r.r=(1-r.opacity)*(this.r_range[1]-this.r_range[0])+this.r_range[0],r.ColorList=this.getColorList(r.freq),this.isOverlap(r))return this.addBall();var e=this.color[0];switch(r.color=[].concat(t(e)),r.type){case 0:break;case 1:r.empty={r:this.getRandomNumber([r.r/2,r.r/4*3])};break;case 2:r.empty={r:this.getRandomNumber([r.r/2,r.r/4*3])},r.son={r:this.getRandomNumber([r.empty.r/2,r.empty.r/4*3]),color:[].concat(t(r.color))}}this.balls.push(r)}},{key:"isOverlap",value:function(r){return!this.balls.every(function(t){return!(Math.sqrt(Math.pow(r.x-t.x,2)+Math.pow(r.y-t.y,2))<=r.r+t.r)})}},{key:"addMirrorBall",value:function(r,t){var e={};for(var i in r)void 0!==t[i]?e[i]=t[i]:e[i]=r[i];return e}},{key:"render",value:function(r){var t=this;this.cxt.clearRect(0,0,this.width,this.height),Array.from(this.balls,function(r){if(t.renderBall(r),r.mirror)return t.renderBall(r.mirror,r);!r.mirror&&r.x<r.r?(r.mirror=t.addMirrorBall(r,{x:r.x+t.width,mirror:null}),t.renderBall(r.mirror,r)):!r.mirror&&r.x>t.width-r.r?(r.mirror=t.addMirrorBall(r,{x:r.x-t.width,mirror:null}),t.renderBall(r.mirror,r)):!r.mirror&&r.y<r.r?(r.mirror=t.addMirrorBall(r,{y:r.y+t.height,mirror:null}),t.renderBall(r.mirror,r)):!r.mirror&&r.y>t.height-r.r&&(r.mirror=t.addMirrorBall(r,{y:r.y-t.height,mirror:null}),t.renderBall(r.mirror,r))})}},{key:"renderBall",value:function(r,t){var e=this,i=r.x,o=r.y;this.renderArc(i,o,r.r,this.getRGBA(r.color,r.opacity)),this.cxt.globalCompositeOperation="destination-out",r.type>0&&this.renderArc(i,o,r.empty.r,"#fff"),this.cxt.globalCompositeOperation="source-over",2===r.type&&this.renderArc(i,o,r.son.r,this.getRGBA(r.son.color,r.opacity)),Array.from(this.balls,function(n){if(r===n)return!1;var a=Math.sqrt(Math.pow(i-n.x,2)+Math.pow(o-n.y,2));if(a<e.line_range&&a>r.r+n.r){var s=e.cxt.createLinearGradient(i,o,n.x,n.y);1===r.type?(s.addColorStop(0,e.getRGBA(r.color,1-a/e.line_range)),s.addColorStop(r.empty.r/a,e.getRGBA(r.color,1-a/e.line_range)),s.addColorStop(r.empty.r/a,"transparent")):2===r.type?(s.addColorStop(0,"transparent"),s.addColorStop(r.son.r/a,"transparent"),s.addColorStop(r.son.r/a,e.getRGBA(r.color,1-a/e.line_range)),s.addColorStop(r.empty.r/a,e.getRGBA(r.color,1-a/e.line_range)),s.addColorStop(r.empty.r/a,"transparent")):s.addColorStop(0,"transparent"),s.addColorStop(r.r/a,"transparent"),s.addColorStop(r.r/a,e.getRGBA(r.color,1-a/e.line_range)),s.addColorStop(1-n.r/a,e.getRGBA(n.color,1-a/e.line_range)),s.addColorStop(1-n.r/a,"transparent"),s.addColorStop(1,"transparent"),e.cxt.strokeStyle=s,e.renderLine(i,o,n.x,n.y)}else a<r.r+n.r&&!r.isCrash&&(r.isCrash=!0,n.isCrash=!0,e.crashHandle(r,n),t&&(t.isCrash=!0,t.vx=r.vx,t.vy=r.vy),r.mirror&&(r.mirror.isCrash=!0,r.mirror.vx=r.vx,r.mirror.vy=r.vy))})}},{key:"crashHandle",value:function(r,t){var e=Math.atan2(t.y-r.y,t.x-r.x),i=Math.sqrt(r.vx*r.vx+r.vy*r.vy),o=Math.sqrt(t.vx*t.vx+t.vy*t.vy),n=Math.atan2(r.vy,r.vx),a=Math.atan2(t.vy,t.vx),s=i*Math.cos(n-e),h=i*Math.sin(n-e),l=o*Math.cos(a-e),c=o*Math.sin(a-e),u=l,d=h,y=s,v=c;r.vx=Math.cos(e)*u+Math.cos(e+Math.PI/2)*d,r.vy=Math.sin(e)*u+Math.sin(e+Math.PI/2)*d,t.vx=Math.cos(e)*y+Math.cos(e+Math.PI/2)*v,t.vy=Math.sin(e)*y+Math.sin(e+Math.PI/2)*v}},{key:"update",value:function(){var r=this;this.balls=this.balls.map(function(e){return e.x<-e.r?e.mirror:e.x>r.width+e.r?e.mirror:e.y<-e.r?e.mirror:e.y>r.height+e.r?e.mirror:(e.x+=e.vx,e.y+=e.vy,e.color=e.color.map(function(r,t){return e.cur_i++,e.cur_i===e.ColorList.length&&(e.cur_i=0,e.reverse=!e.reverse),e.ColorList[e.reverse?e.ColorList.length-e.cur_i-1:e.cur_i][t]}),2===e.type&&(e.son.color=[].concat(t(e.color))),e.mirror&&(e.mirror.x+=e.mirror.vx,e.mirror.y+=e.mirror.vy),e.isCrash&&(e.isCrash=!1),e)})}},{key:"getRGBA",value:function(r,t){return"rgba("+~~r[0]+", "+~~r[1]+", "+~~r[2]+", "+t+")"}},{key:"getRandomNumber",value:function(r,t){var e=i(r,2),o=e[0],n=e[1];return Math.random()*(n-o)+o}},{key:"renderArc",value:function(r,t,e,i){this.cxt.fillStyle=i,this.cxt.beginPath(),this.cxt.arc(r,t,e,0,2*Math.PI,!0),this.cxt.closePath(),this.cxt.fill()}},{key:"renderLine",value:function(r,t,e,i){this.cxt.beginPath(),this.cxt.moveTo(r,t),this.cxt.lineTo(e,i),this.cxt.closePath(),this.cxt.stroke()}},{key:"renderTri",value:function(r,t,e){this.cxt.beginPath(),this.cxt.moveTo(r.x,r.y),this.cxt.lineTo(t.x,t.y),this.cxt.lineTo(e.x,e.y),this.cxt.lineTo(r.x,r.y),this.cxt.closePath(),this.cxt.stroke()}}]),r}();r.default=n});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
